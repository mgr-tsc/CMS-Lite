events {
    worker_connections 1024;
}

http {
    upstream api {
        server 127.0.0.1:8080;
    }

    upstream web {
        server 127.0.0.1:9090;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # SSL parameters for security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # API routes - pass through to backend
        location /api/ {
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Other backend endpoints (not under /api)
        location /health {
            proxy_pass http://api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /create-tenant {
            proxy_pass http://api/create-tenant;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /attach-user {
            proxy_pass http://api/attach-user;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /swagger {
            proxy_pass http://api/swagger;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Frontend routes (everything else)
        location / {
            proxy_pass http://web/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
